概念：单例模式（Singleton Pattern）是一种常用的软件设计模式，该模式的主要目的是确保某一个类只有一个实例存在。当你希望在整个系统中，某个类只能出现一个实例时，单例对象就能派上用场。在python中就是一个类，你只能创建一次，后面再创建的话也是和前面的一样。
实现：1，重写__new__，在创建类的时候判断是否已经创建过,没有的话才创建
	  2，重写__new__，将类引用的参数全部指向同一个内存地址
	  3，使用装饰器装饰类，判断类没有被创建之后才创建，否则，返回原来的类
	  4，__metaclass__（元类）
http://blog.csdn.net/ghostfromheaven/article/details/7671853


[program:test]

command=/usr/local/bin/uwsgi /wsj/test/uwsgiconfig.ini


directory=/wsj/test

user=root
        
autostart=true
autorestart=true

